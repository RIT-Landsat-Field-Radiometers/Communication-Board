/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_HOURLY_PB_H_INCLUDED
#define PB_HOURLY_PB_H_INCLUDED
#include "./pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _HourlyData_SystemEvents_EventType { 
    HourlyData_SystemEvents_EventType_LOW_BATTERY = 0, 
    HourlyData_SystemEvents_EventType_NORMAL_BATTERY = 1, 
    HourlyData_SystemEvents_EventType_DEVICE_DISCONNECT = 2, 
    HourlyData_SystemEvents_EventType_DEVICE_CONNECT = 3, 
    HourlyData_SystemEvents_EventType_LOW_SD_CARD = 4, 
    HourlyData_SystemEvents_EventType_OTHER = 5 
} HourlyData_SystemEvents_EventType;

/* Struct definitions */
typedef struct _HourlyData_readings { 
    pb_size_t values_count;
    float *values; 
} HourlyData_readings;

typedef struct _HourlyData_EnvironmentalBoard { 
    uint64_t serialNumber; 
    uint32_t fwVersion; 
    bool has_windSpeed;
    HourlyData_readings windSpeed; 
    bool has_windDirection;
    HourlyData_readings windDirection; 
    bool has_humidity;
    HourlyData_readings humidity; 
    bool has_pressure;
    HourlyData_readings pressure; 
    pb_size_t rain_count;
    bool *rain; 
} HourlyData_EnvironmentalBoard;

typedef struct _HourlyData_SensorBoard { 
    uint64_t serialNumber; 
    uint32_t fwVersion; 
    pb_size_t channels_count;
    struct _HourlyData_readings *channels; 
} HourlyData_SensorBoard;

typedef struct _TimeStamp_date { 
    uint32_t year; 
    uint32_t month; 
    uint32_t day; 
    uint32_t hour; 
    uint32_t minute; 
    uint32_t second; 
} TimeStamp_date;

typedef struct _TimeStamp { 
    pb_size_t which_time;
    union {
        TimeStamp_date longver;
        uint32_t unixTime;
    } time; 
} TimeStamp;

typedef struct _HourlyData { 
    uint64_t commsSerial; 
    uint32_t fwVersion; 
    pb_size_t sensors_count;
    struct _HourlyData_SensorBoard *sensors; 
    bool has_bmeBoard;
    HourlyData_EnvironmentalBoard bmeBoard; 
    pb_size_t events_count;
    struct _HourlyData_SystemEvents *events; 
    bool has_dataStart;
    TimeStamp dataStart; 
    uint64_t duration; 
} HourlyData;

typedef struct _HourlyData_SystemEvents { 
    HourlyData_SystemEvents_EventType type; 
    char *details; 
    bool has_time;
    TimeStamp time; 
} HourlyData_SystemEvents;


/* Helper constants for enums */
#define _HourlyData_SystemEvents_EventType_MIN HourlyData_SystemEvents_EventType_LOW_BATTERY
#define _HourlyData_SystemEvents_EventType_MAX HourlyData_SystemEvents_EventType_OTHER
#define _HourlyData_SystemEvents_EventType_ARRAYSIZE ((HourlyData_SystemEvents_EventType)(HourlyData_SystemEvents_EventType_OTHER+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define TimeStamp_init_default                   {0, {TimeStamp_date_init_default}}
#define TimeStamp_date_init_default              {0, 0, 0, 0, 0, 0}
#define HourlyData_init_default                  {0, 0, 0, NULL, false, HourlyData_EnvironmentalBoard_init_default, 0, NULL, false, TimeStamp_init_default, 0}
#define HourlyData_readings_init_default         {0, NULL}
#define HourlyData_SensorBoard_init_default      {0, 0, 0, NULL}
#define HourlyData_EnvironmentalBoard_init_default {0, 0, false, HourlyData_readings_init_default, false, HourlyData_readings_init_default, false, HourlyData_readings_init_default, false, HourlyData_readings_init_default, 0, NULL}
#define HourlyData_SystemEvents_init_default     {_HourlyData_SystemEvents_EventType_MIN, NULL, false, TimeStamp_init_default}
#define TimeStamp_init_zero                      {0, {TimeStamp_date_init_zero}}
#define TimeStamp_date_init_zero                 {0, 0, 0, 0, 0, 0}
#define HourlyData_init_zero                     {0, 0, 0, NULL, false, HourlyData_EnvironmentalBoard_init_zero, 0, NULL, false, TimeStamp_init_zero, 0}
#define HourlyData_readings_init_zero            {0, NULL}
#define HourlyData_SensorBoard_init_zero         {0, 0, 0, NULL}
#define HourlyData_EnvironmentalBoard_init_zero  {0, 0, false, HourlyData_readings_init_zero, false, HourlyData_readings_init_zero, false, HourlyData_readings_init_zero, false, HourlyData_readings_init_zero, 0, NULL}
#define HourlyData_SystemEvents_init_zero        {_HourlyData_SystemEvents_EventType_MIN, NULL, false, TimeStamp_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define HourlyData_readings_values_tag           1
#define HourlyData_EnvironmentalBoard_serialNumber_tag 1
#define HourlyData_EnvironmentalBoard_fwVersion_tag 2
#define HourlyData_EnvironmentalBoard_windSpeed_tag 3
#define HourlyData_EnvironmentalBoard_windDirection_tag 4
#define HourlyData_EnvironmentalBoard_humidity_tag 5
#define HourlyData_EnvironmentalBoard_pressure_tag 6
#define HourlyData_EnvironmentalBoard_rain_tag   7
#define HourlyData_SensorBoard_serialNumber_tag  1
#define HourlyData_SensorBoard_fwVersion_tag     2
#define HourlyData_SensorBoard_channels_tag      3
#define TimeStamp_date_year_tag                  1
#define TimeStamp_date_month_tag                 2
#define TimeStamp_date_day_tag                   3
#define TimeStamp_date_hour_tag                  4
#define TimeStamp_date_minute_tag                5
#define TimeStamp_date_second_tag                6
#define TimeStamp_longver_tag                    1
#define TimeStamp_unixTime_tag                   2
#define HourlyData_commsSerial_tag               1
#define HourlyData_fwVersion_tag                 2
#define HourlyData_sensors_tag                   3
#define HourlyData_bmeBoard_tag                  4
#define HourlyData_events_tag                    5
#define HourlyData_dataStart_tag                 6
#define HourlyData_duration_tag                  7
#define HourlyData_SystemEvents_type_tag         1
#define HourlyData_SystemEvents_details_tag      2
#define HourlyData_SystemEvents_time_tag         3

/* Struct field encoding specification for nanopb */
#define TimeStamp_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (time,longver,time.longver),   1) \
X(a, STATIC,   ONEOF,    FIXED32,  (time,unixTime,time.unixTime),   2)
#define TimeStamp_CALLBACK NULL
#define TimeStamp_DEFAULT NULL
#define TimeStamp_time_longver_MSGTYPE TimeStamp_date

#define TimeStamp_date_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   year,              1) \
X(a, STATIC,   SINGULAR, UINT32,   month,             2) \
X(a, STATIC,   SINGULAR, UINT32,   day,               3) \
X(a, STATIC,   SINGULAR, UINT32,   hour,              4) \
X(a, STATIC,   SINGULAR, UINT32,   minute,            5) \
X(a, STATIC,   SINGULAR, UINT32,   second,            6)
#define TimeStamp_date_CALLBACK NULL
#define TimeStamp_date_DEFAULT NULL

#define HourlyData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED64,  commsSerial,       1) \
X(a, STATIC,   SINGULAR, UINT32,   fwVersion,         2) \
X(a, POINTER,  REPEATED, MESSAGE,  sensors,           3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  bmeBoard,          4) \
X(a, POINTER,  REPEATED, MESSAGE,  events,            5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  dataStart,         6) \
X(a, STATIC,   SINGULAR, UINT64,   duration,          7)
#define HourlyData_CALLBACK NULL
#define HourlyData_DEFAULT NULL
#define HourlyData_sensors_MSGTYPE HourlyData_SensorBoard
#define HourlyData_bmeBoard_MSGTYPE HourlyData_EnvironmentalBoard
#define HourlyData_events_MSGTYPE HourlyData_SystemEvents
#define HourlyData_dataStart_MSGTYPE TimeStamp

#define HourlyData_readings_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, FLOAT,    values,            1)
#define HourlyData_readings_CALLBACK NULL
#define HourlyData_readings_DEFAULT NULL

#define HourlyData_SensorBoard_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED64,  serialNumber,      1) \
X(a, STATIC,   SINGULAR, UINT32,   fwVersion,         2) \
X(a, POINTER,  REPEATED, MESSAGE,  channels,          3)
#define HourlyData_SensorBoard_CALLBACK NULL
#define HourlyData_SensorBoard_DEFAULT NULL
#define HourlyData_SensorBoard_channels_MSGTYPE HourlyData_readings

#define HourlyData_EnvironmentalBoard_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED64,  serialNumber,      1) \
X(a, STATIC,   SINGULAR, UINT32,   fwVersion,         2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  windSpeed,         3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  windDirection,     4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  humidity,          5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  pressure,          6) \
X(a, POINTER,  REPEATED, BOOL,     rain,              7)
#define HourlyData_EnvironmentalBoard_CALLBACK NULL
#define HourlyData_EnvironmentalBoard_DEFAULT NULL
#define HourlyData_EnvironmentalBoard_windSpeed_MSGTYPE HourlyData_readings
#define HourlyData_EnvironmentalBoard_windDirection_MSGTYPE HourlyData_readings
#define HourlyData_EnvironmentalBoard_humidity_MSGTYPE HourlyData_readings
#define HourlyData_EnvironmentalBoard_pressure_MSGTYPE HourlyData_readings

#define HourlyData_SystemEvents_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, POINTER,  SINGULAR, STRING,   details,           2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  time,              3)
#define HourlyData_SystemEvents_CALLBACK NULL
#define HourlyData_SystemEvents_DEFAULT NULL
#define HourlyData_SystemEvents_time_MSGTYPE TimeStamp

extern const pb_msgdesc_t TimeStamp_msg;
extern const pb_msgdesc_t TimeStamp_date_msg;
extern const pb_msgdesc_t HourlyData_msg;
extern const pb_msgdesc_t HourlyData_readings_msg;
extern const pb_msgdesc_t HourlyData_SensorBoard_msg;
extern const pb_msgdesc_t HourlyData_EnvironmentalBoard_msg;
extern const pb_msgdesc_t HourlyData_SystemEvents_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define TimeStamp_fields &TimeStamp_msg
#define TimeStamp_date_fields &TimeStamp_date_msg
#define HourlyData_fields &HourlyData_msg
#define HourlyData_readings_fields &HourlyData_readings_msg
#define HourlyData_SensorBoard_fields &HourlyData_SensorBoard_msg
#define HourlyData_EnvironmentalBoard_fields &HourlyData_EnvironmentalBoard_msg
#define HourlyData_SystemEvents_fields &HourlyData_SystemEvents_msg

/* Maximum encoded size of messages (where known) */
/* HourlyData_size depends on runtime parameters */
/* HourlyData_readings_size depends on runtime parameters */
/* HourlyData_SensorBoard_size depends on runtime parameters */
/* HourlyData_EnvironmentalBoard_size depends on runtime parameters */
/* HourlyData_SystemEvents_size depends on runtime parameters */
#define TimeStamp_date_size                      36
#define TimeStamp_size                           38

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
